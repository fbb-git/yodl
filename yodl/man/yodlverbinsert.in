mailto(f.b.brokken@rug.nl)

includefile(release.yo)

DEFINEMACRO(lsoption)(3)(\
    bf(--ARG1)=tt(ARG3) (bf(-ARG2))\
)
DEFINEMACRO(loption)(1)(\
    bf(--ARG1)\
)
DEFINEMACRO(soption)(1)(\
    bf(-ARG1)\
)

DEFINEMACRO(vic)(0)(bf(yodlverbinsert))
DEFINEMACRO(Vic)(0)(bf(Verbinsert))

redefinemacro(tt)(1)(em(ARG1))

manpage(yodlverbinsert)
        (1)
       (_CurYrs_)
       (yodl__CurVers_.tar.gz)
       (Your Own Document Language)

manpagename(yodlverbinsert)(Generate verb-sections from parts of a file)

manpagesynopsis()
       bf(yodlverbinsert) [OPTIONS] tt([marker] file)

manpagedescription()

    Vic() is a simple bf(C++) support program that is used for generating
tt(verb+CHAR(40)CHAR(41))-sections in bf(Yodl) files using sections of
existing files. The files from which sections are included are usually bf(C)
or bf(Cpp) source files, accepting either tt(//) or tt(/*)-style comment. See
the bf(EXAMPLES) section for illustrations.

    Vic() offers the possibility to indent both the initial tt(verb)-statement
and the inserted file contents. Furthermore, an additional empty line may be
inserted before the first line that is actually inserted.

    Blank lines at the beginning and end of files are ignored.

    itemization(
    it() tt(marker)nl()
    The argument tt(marker) must start in tt(file)'s first column en must
either start as a standard bf(C) or bf(C++) comment: tt(//) or tt(/*) must be
used. Following that, the remainder of the argument is used as a label, e.g.,
tt(//label), tt(/*label*/). Except for the first two characters and their
locations, and the last two characters of a bf(C)-style marker, no special
restrictions are imposed upon the label-names. A labeled section ends at the
next tt(//=) (for labels starting with tt(//)) or at the next tt(/**/)
(for labels starting  with tt(/*)). Like the markers, the end-markers must
also start in the first columns of lines.

    Alternatively, pairs of tt(//+label), or tt(/*+label*/) can be used. For
such markers, copying starts at the first line following the first occurrence
of the label, and ends when the label is encountered again.  When these
markers are used any additionally encountered marker-line is simply ignored,
and not written to the output stream.  This allowes labeled sections to be
nested.

    it() tt(file)nl()
    The argument tt(file) must be an existing file.
    )

    Vic() writes its selected section to its standard output stream.

    When files contain identical marker sections then the contents of each of
these marker sections is included in the generated tt(verb)-section. This
allows the inclusion of non-consecutive lines of source files in a tt(verb)
section.

manpageoptions()
    The default values of options are listed with each of the options between
square brackets. The defaults were chosen so that vic() performs the behavior
of an earlier version of this program, which was not distributed with bf(Yodl).
    itemization(
    it() bf(-a)nl()
    Process all lines of tt(file) (except initial and trailing blank
lines). The argument tt(marker) must not be specified.
    it() bf(-A)nl()
    Same as the tt(-a) option, but ignoring all lines that can be considered 
tt(yodlverbinsert) (end) marker-lines. 
    it() bf(-n)nl()
    Immediately following the indentation: lines are prefixed by numbers,
occupying 2 columns, followed by a colon and a blank.
    it() bf(-N)nl()
    Do not write a newline immediately following tt(verb)-statement's
open-parenthesis. By default it is written, causing an additional line to be
inserted before the first line that's actually inserted from a file.
    it() bf(-s) tt(nSpaces) [0]nl()
        start each line that is written into the tt(verb)-section with
tt(nSpaces) additional blanks.
    it() bf(-S) tt(nSpaces) [8]nl()
        prefix the tt(verb) of the tt(verb)-section by tt(nSpaces) additional
blanks.
    it() bf(-t) tt(nTabs) [0]nl()
        start each line that is written into the tt(verb)-section with
tt(nTabs) additional tab characters. If both tt(-s) and tt(-t) are specified,
the tabs are inserted first.
    it() bf(-T) tt(nTabs) [0]nl()
        prefix the tt(verb) of the tt(verb)-section by tt(nTabs) additional
tab characters. If both tt(-S) and tt(-T) are specified, the tabs are inserted
first.
    )
                    
manpagesection(EXAMPLE)

    Assume the file tt(demo) contains the following text:
        verb(
preceding text

//+nest
//one
one 1

//=

/*two*/

    two

/**/
//+nest

trailing text
    )

    Then the following commands write the shown output to the program's
standard output:
    itemization(
    it() tt(yodlverbinsert //one demo)nl()
        verb(        verb(
one 1
)
)
    it() tt(yodlverbinsert -N //one demo)nl()
        verb(        verb(one 1
)
)
    it() tt(yodlverbinsert -n -s4 '/*two*/' demo)nl()
        verb(        verb(
        1: two
)
)

    it() tt(yodlverbinsert -n //+nest' demo)nl()
        verb(        verb(
 1: one 1
 2:
 3:
 4:
 5:     two
)
)
)

manpageseealso()

        bf(yodl)(1), 
        bf(yodlbuiltins)(7), 
        bf(yodlconverters)(1), 
        bf(yodlletter)(7), 
        bf(yodlmacros)(7), 
        bf(yodlmanpage)(7),
        bf(yodlpost)(1), 
        bf(yodlstriproff)(1), 
        bf(yodltables)(7).

manpagebugs()

    -

manpageauthor()

    Frank B. Brokken (f.b.brokken@rug.nl),
