#include "lexer.h"

#include <stdio.h>
#include <ctype.h>
#include <limits.h>         // for realpath
#include <stdlib.h>
#include <unistd.h>         // for chdir

#include "../config.h"
#include "../args/args.h"
#include "../new/new.h"
#include "../file/file.h"
#include "../media/media.h"

                            /* This capitalizes on the fact that EOF == -1  */
#define EOR                 (-2)

/*
    If the media struct stores a filename, d_memory is set to NULL
    If the media struct stores memory contents, d_memory is not NULL
    By inspecting the value of d_memory, it is determined whether we
    are processing a file or memory
*/

void            l_media_construct_file(Media *mp, Lexer *,
                                                    char const *pahtname);
void            l_media_construct_memory(Media *mp, Lexer *lp,
                                                    char const *str);

void            l_max_replacements_exceeded(size_t max);
LEXER_TOKEN     l_append(Lexer *lp, LEXER_TOKEN token);
void            l_chdir(Lexer *lp, char const *pathname);
void            l_noChdir(Lexer *lp, char const *pathname);
LEXER_TOKEN     l_compound(Lexer *lp);
int             l_get(Lexer *lp);
void            l_getchar_message(Lexer *lp, char const *pushedback, int ch);
LEXER_TOKEN     l_handle_ident(Lexer *lp);
LEXER_TOKEN     l_handle_number(Lexer *lp);
LEXER_TOKEN     l_lex(Lexer *lp);
void            l_nextchar(Lexer *lp);
Result          l_pop(Lexer *lp);
void            l_push(Lexer *lp, char const *info,
                       void (*constructor)(Media *, Lexer *, char const *));
int             l_subst_get(Lexer *lp);
void            l_unget(Lexer *lp, int ch);
void            l_push_level(Lexer *lp, char const *txt);

                                                /* d_lastchar is identchar? */
static inline bool l_isIdentChar(register Lexer *lp)
{
    return isalpha(lp->d_lastchar);     /* very simple... */
}

